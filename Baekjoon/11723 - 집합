# S5_11723_집합
# trial_1_시간초과

a = set()

for _ in range(int(input())):
    s = input().split()
    cmd, num = s[0], int(s[1]) if len(s) > 1 else None

    if cmd == "add":
        a.add(num)
    elif cmd == "remove":
        a.discard(num)
    elif cmd == "check":
        print(1 if num in a else 0)
    elif cmd == "toggle":
        if num in a:
            a.remove(num)
        else:
            a.add(num)
    elif cmd == "all":
        a = set(range(1, 21))
    elif cmd == "empty":
        a.clear()


############# trial_2_시간초과 ############# 

def add(num):
    a.add(num)

def remove(num):
    a.discard(num)

def check(num):
    print(1 if num in a else 0)

def toggle(num):
    a.discard(num) if num in a else a.add(num)

def all():
    a.update(range(1, 21))

def empty():
    a.clear()

operations = {
    'add': add,
    'remove': remove,
    'check': check,
    'toggle': toggle,
    'all': all,
    'empty': empty
}

a = set()

for _ in range(int(input())):
    s = input().split()
    cmd = s[0]
    num = int(s[1]) if len(s) > 1 else None

    if cmd in operations:
        operations[cmd]() if num is None else operations[cmd](num)




############# trial_3_성공 #############
# stdin.readline() 사용, boolean배열 사용하여 메모리 접근 효율성 확보
# (set은 HashTable 기반)

import sys

def add(num):
    a[num] = True

def remove(num):
    a[num] = False

def check(num):
    print(1 if a[num] else 0)

def toggle(num):
    a[num] = not a[num]

def all():
    for i in range(1, 21):
        a[i] = True

def empty():
    for i in range(1, 21):
        a[i] = False

operations = {
    'add': add,
    'remove': remove,
    'check': check,
    'toggle': toggle,
    'all': all,
    'empty': empty
}

a = [False] * 21

n = int(sys.stdin.readline().strip())
for _ in range(n):
    s = sys.stdin.readline().split()
    cmd = s[0]
    num = int(s[1]) if len(s) > 1 else None

    if cmd in operations:
        operations[cmd]() if num is None else operations[cmd](num)
